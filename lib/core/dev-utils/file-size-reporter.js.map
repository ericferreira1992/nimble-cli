{"version":3,"file":"file-size-reporter.js","sourceRoot":"","sources":["../../../src/core/dev-utils/file-size-reporter.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport chalk from 'chalk';\nimport { filesize } from 'filesize';\nimport recursive from 'recursive-readdir';\nimport stripAnsi from 'strip-ansi';\nimport { gzipSizeSync } from 'gzip-size';\n\nfunction canReadAsset(asset) {\n    return (\n        /\\.(js|css)$/.test(asset) &&\n        !/service-worker\\.js/.test(asset) &&\n        !/precache-manifest\\.[0-9a-f]+\\.js/.test(asset)\n    );\n}\n\n// Prints a detailed summary of build files.\nfunction printFileSizesAfterBuild(\n    webpackStats,\n    previousSizeMap,\n    buildFolder,\n    maxBundleGzipSize,\n    maxChunkGzipSize\n) {\n    var root = previousSizeMap.root;\n    var sizes = previousSizeMap.sizes;\n    var assets = (webpackStats.stats || [webpackStats])\n        .map(stats =>\n            stats\n                .toJson({ all: false, assets: true })\n                .assets.filter(asset => canReadAsset(asset.name))\n                .map(asset => {\n                    var fileContents = fs.readFileSync(path.join(root, asset.name));\n                    var size = gzipSizeSync(fileContents);\n                    var previousSize = sizes[removeFileNameHash(root, asset.name)];\n                    var difference = getDifferenceLabel(size, previousSize);\n                    return {\n                        folder: path.join(\n                            path.basename(buildFolder),\n                            path.dirname(asset.name)\n                        ),\n                        name: path.basename(asset.name),\n                        size: size,\n                        sizeLabel: filesize(size) + (difference ? ' (' + difference + ')' : ''),\n                    };\n                })\n        )\n        .reduce((single, all) => all.concat(single), []);\n    assets.sort((a, b) => b.size - a.size);\n    var longestSizeLabelLength = Math.max.apply(\n        null,\n        assets.map(a => stripAnsi(a.sizeLabel).length)\n    );\n    var suggestBundleSplitting = false;\n    assets.forEach(asset => {\n        var sizeLabel = asset.sizeLabel;\n        var sizeLength = stripAnsi(sizeLabel).length;\n        if (sizeLength < longestSizeLabelLength) {\n            var rightPadding = ' '.repeat(longestSizeLabelLength - sizeLength);\n            sizeLabel += rightPadding;\n        }\n        var isMainBundle = asset.name.indexOf('main.') === 0;\n        var maxRecommendedSize = isMainBundle\n            ? maxBundleGzipSize\n            : maxChunkGzipSize;\n        var isLarge = maxRecommendedSize && asset.size > maxRecommendedSize;\n        if (isLarge && path.extname(asset.name) === '.js') {\n            suggestBundleSplitting = true;\n        }\n        console.log(\n            '  ' +\n            (isLarge ? chalk.yellow(sizeLabel) : sizeLabel) +\n            '  ' +\n            chalk.dim(asset.folder + path.sep) +\n            chalk.cyan(asset.name)\n        );\n    });\n    if (suggestBundleSplitting) {\n        console.log();\n        console.log(\n            chalk.yellow('The bundle size is significantly larger than recommended.')\n        );\n        console.log(\n            chalk.yellow(\n                'Consider reducing it with code splitting: https://goo.gl/9VhYWB'\n            )\n        );\n        console.log(\n            chalk.yellow(\n                'You can also analyze the project dependencies: https://goo.gl/LeUzfb'\n            )\n        );\n    }\n}\n\nfunction removeFileNameHash(buildFolder, fileName) {\n    return fileName\n        .replace(buildFolder, '')\n        .replace(/\\\\/g, '/')\n        .replace(\n            /\\/?(.*)(\\.[0-9a-f]+)(\\.chunk)?(\\.js|\\.css)/,\n            (match, p1, p2, p3, p4) => p1 + p4\n        );\n}\n\n// Input: 1024, 2048\n// Output: \"(+1 KB)\"\nfunction getDifferenceLabel(currentSize, previousSize) {\n    var FIFTY_KILOBYTES = 1024 * 50;\n    var difference = currentSize - previousSize;\n    var fileSize = !Number.isNaN(difference) ? filesize(difference) : 0;\n    if (difference >= FIFTY_KILOBYTES) {\n        return chalk.red('+' + fileSize);\n    } else if (difference < FIFTY_KILOBYTES && difference > 0) {\n        return chalk.yellow('+' + fileSize);\n    } else if (difference < 0) {\n        return chalk.green(fileSize);\n    } else {\n        return '';\n    }\n}\n\nfunction measureFileSizesBeforeBuild(buildFolder) {\n    return new Promise(resolve => {\n        recursive(buildFolder, (err, fileNames) => {\n            var sizes;\n            if (!err && fileNames) {\n                sizes = fileNames.filter(canReadAsset).reduce((memo, fileName) => {\n                    var contents = fs.readFileSync(fileName);\n                    var key = removeFileNameHash(buildFolder, fileName);\n                    memo[key] = gzipSizeSync(contents);\n                    return memo;\n                }, {});\n            }\n            resolve({\n                root: buildFolder,\n                sizes: sizes || {},\n            });\n        });\n    });\n}\n\nexport const FileSizeReporter = {\n    measureFileSizesBeforeBuild: measureFileSizesBeforeBuild,\n    printFileSizesAfterBuild: printFileSizesAfterBuild,\n};"]}