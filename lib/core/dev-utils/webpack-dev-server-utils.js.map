{"version":3,"file":"webpack-dev-server-utils.js","sourceRoot":"","sources":["../../../src/core/dev-utils/webpack-dev-server-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import address from 'address';\nimport fs from 'fs';\nimport path from 'path';\nimport url from 'url';\nimport chalk from 'chalk';\nimport detect from 'detect-port-alt';\nimport isRoot from 'is-root';\nimport prompts from 'prompts';\nimport { clearConsole } from './clear-console';\nimport { formatWebpackMessages } from './format-webpack-msgs';\nimport { getProcessForPort } from './process-for-port';\nimport { forkTsCheckerWebpackPlugin } from './fork-ts-checker-webpack-plugin';\n\nconst isInteractive = process.stdout.isTTY;\n\nexport function prepareUrls(protocol, host, port, pathname = '/') {\n    const formatUrl = hostname =>\n        url.format({\n            protocol,\n            hostname,\n            port,\n            pathname,\n        });\n    const prettyPrintUrl = hostname =>\n        url.format({\n            protocol,\n            hostname,\n            port: chalk.bold(port),\n            pathname,\n        });\n\n    const isUnspecifiedHost = host === '0.0.0.0' || host === '::';\n    let prettyHost, lanUrlForConfig, lanUrlForTerminal;\n    if (isUnspecifiedHost) {\n        prettyHost = 'localhost';\n        try {\n            // This can only return an IPv4 address\n            lanUrlForConfig = address.ip();\n            if (lanUrlForConfig) {\n                // Check if the address is a private ip\n                // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n                if (\n                    /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n                        lanUrlForConfig\n                    )\n                ) {\n                    // Address is private, format it for later use\n                    lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig);\n                } else {\n                    // Address is not private, so we will discard it\n                    lanUrlForConfig = undefined;\n                }\n            }\n        } catch (_e) {\n            // ignored\n        }\n    } else {\n        prettyHost = host;\n    }\n    const localUrlForTerminal = prettyPrintUrl(prettyHost);\n    const localUrlForBrowser = formatUrl(prettyHost);\n    return {\n        lanUrlForConfig,\n        lanUrlForTerminal,\n        localUrlForTerminal,\n        localUrlForBrowser,\n    };\n}\n\nfunction printInstructions(appName, urls, useYarn) {\n    console.log();\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`);\n    console.log();\n\n    if (urls.lanUrlForTerminal) {\n        console.log(\n            `  ${chalk.bold('Local:')}            ${urls.localUrlForTerminal}`\n        );\n        console.log(\n            `  ${chalk.bold('On Your Network:')}  ${urls.lanUrlForTerminal}`\n        );\n    } else {\n        console.log(`  ${urls.localUrlForTerminal}`);\n    }\n\n    console.log();\n    console.log('Note that the development build is not optimized.');\n    console.log(\n        `To create a production build, use ` +\n        `${chalk.cyan(`${useYarn ? 'yarn' : 'npm run'} build`)}.`\n    );\n    console.log();\n}\n\nexport function createCompiler({\n    appName,\n    config,\n    urls,\n    useYarn,\n    useTypeScript,\n    webpack,\n}) {\n    // \"Compiler\" is a low-level interface to webpack.\n    // It lets us listen to some events and provide our own custom messages.\n    let compiler;\n    try {\n        compiler = webpack(config);\n    } catch (err: any) {\n        console.log(chalk.red('Failed to compile.'));\n        console.log();\n        console.log(err.message || err);\n        console.log();\n        process.exit(1);\n    }\n\n    // \"invalid\" event fires when you have changed a file, and webpack is\n    // recompiling a bundle. WebpackDevServer takes care to pause serving the\n    // bundle, so if you refresh, it'll wait instead of serving the old one.\n    // \"invalid\" is short for \"bundle invalidated\", it doesn't imply any errors.\n    compiler.hooks.invalid.tap('invalid', () => {\n        if (isInteractive) {\n            clearConsole();\n        }\n        console.log('Compiling...');\n    });\n\n    let isFirstCompile = true;\n    let tsMessagesPromise;\n\n    if (useTypeScript) {\n        forkTsCheckerWebpackPlugin\n            .getCompilerHooks(compiler)\n            .waiting.tap('awaitingTypeScriptCheck', () => {\n                console.log(\n                    chalk.yellow(\n                        'Files successfully emitted, waiting for typecheck results...'\n                    )\n                );\n            });\n    }\n\n    // \"done\" event fires when webpack has finished recompiling the bundle.\n    // Whether or not you have warnings or errors, you will get this event.\n    compiler.hooks.done.tap('done', async stats => {\n        if (isInteractive) {\n            clearConsole();\n        }\n\n        // We have switched off the default webpack output in WebpackDevServer\n        // options so we are going to \"massage\" the warnings and errors and present\n        // them in a readable focused way.\n        // We only construct the warnings and errors for speed:\n        // https://github.com/facebook/create-react-app/issues/4492#issuecomment-421959548\n        const statsData = stats.toJson({\n            all: false,\n            warnings: true,\n            errors: true,\n        });\n\n        const messages = formatWebpackMessages(statsData);\n        const isSuccessful = !messages.errors.length && !messages.warnings.length;\n        if (isSuccessful) {\n            console.log(chalk.green('Compiled successfully!'));\n            setTimeout(() => {\n                console.log();\n                console.log('✔', chalk.green('Compiled successfully!'));\n                console.log('❯', 'Open the browser at the address:', urls.localUrlForBrowser);\n            }, 100);\n        }\n        if (isSuccessful && (isInteractive || isFirstCompile)) {\n            printInstructions(appName, urls, useYarn);\n        }\n        isFirstCompile = false;\n\n        // If errors exist, only show errors.\n        if (messages.errors.length) {\n            // Only keep the first error. Others are often indicative\n            // of the same problem, but confuse the reader with noise.\n            if (messages.errors.length > 1) {\n                messages.errors.length = 1;\n            }\n            console.log(chalk.red('Failed to compile.\\n'));\n            console.log(messages.errors.join('\\n\\n'));\n            return;\n        }\n\n        // Show warnings if no errors were found.\n        if (messages.warnings.length) {\n            console.log(chalk.yellow('Compiled with warnings.\\n'));\n            console.log(messages.warnings.join('\\n\\n'));\n\n            // Teach some ESLint tricks.\n            console.log(\n                '\\nSearch for the ' +\n                chalk.underline(chalk.yellow('keywords')) +\n                ' to learn more about each warning.'\n            );\n            console.log(\n                'To ignore, add ' +\n                chalk.cyan('// eslint-disable-next-line') +\n                ' to the line before.\\n'\n            );\n        }\n    });\n\n    // You can safely remove this after ejecting.\n    // We only use this block for testing of Create React App itself:\n    const isSmokeTest = process.argv.some(\n        arg => arg.indexOf('--smoke-test') > -1\n    );\n    if (isSmokeTest) {\n        compiler.hooks.failed.tap('smokeTest', async () => {\n            await tsMessagesPromise;\n            process.exit(1);\n        });\n        compiler.hooks.done.tap('smokeTest', async stats => {\n            await tsMessagesPromise;\n            if (stats.hasErrors() || stats.hasWarnings()) {\n                process.exit(1);\n            } else {\n                process.exit(0);\n            }\n        });\n    }\n\n    return compiler;\n}\n\nfunction resolveLoopback(proxy) {\n    const o = url.parse(proxy) as any;\n    o.host = undefined;\n    if (o.hostname !== 'localhost') {\n        return proxy;\n    }\n    // Unfortunately, many languages (unlike node) do not yet support IPv6.\n    // This means even though localhost resolves to ::1, the application\n    // must fall back to IPv4 (on 127.0.0.1).\n    // We can re-enable this in a few years.\n    /*try {\n      o.hostname = address.ipv6() ? '::1' : '127.0.0.1';\n    } catch (_ignored) {\n      o.hostname = '127.0.0.1';\n    }*/\n\n    try {\n        // Check if we're on a network; if we are, chances are we can resolve\n        // localhost. Otherwise, we can just be safe and assume localhost is\n        // IPv4 for maximum compatibility.\n        if (!address.ip()) {\n            o.hostname = '127.0.0.1';\n        }\n    } catch (_ignored) {\n        o.hostname = '127.0.0.1';\n    }\n    return url.format(o);\n}\n\n// We need to provide a custom onError function for httpProxyMiddleware.\n// It allows us to log custom error messages on the console.\nfunction onProxyError(proxy) {\n    return (err, req, res) => {\n        const host = req.headers && req.headers.host;\n        console.log(\n            chalk.red('Proxy error:') +\n            ' Could not proxy request ' +\n            chalk.cyan(req.url) +\n            ' from ' +\n            chalk.cyan(host) +\n            ' to ' +\n            chalk.cyan(proxy) +\n            '.'\n        );\n        console.log(\n            'See https://nodejs.org/api/errors.html#errors_common_system_errors for more information (' +\n            chalk.cyan(err.code) +\n            ').'\n        );\n        console.log();\n\n        // And immediately send the proper error response to the client.\n        // Otherwise, the request will eventually timeout with ERR_EMPTY_RESPONSE on the client side.\n        if (res.writeHead && !res.headersSent) {\n            res.writeHead(500);\n        }\n        res.end(\n            'Proxy error: Could not proxy request ' +\n            req.url +\n            ' from ' +\n            host +\n            ' to ' +\n            proxy +\n            ' (' +\n            err.code +\n            ').'\n        );\n    };\n}\n\nexport function prepareProxy(proxy, appPublicFolder, servedPathname) {\n    // `proxy` lets you specify alternate servers for specific requests.\n    if (!proxy) {\n        return undefined;\n    }\n    if (typeof proxy !== 'string') {\n        console.log(\n            chalk.red('When specified, \"proxy\" in package.json must be a string.')\n        );\n        console.log(\n            chalk.red('Instead, the type of \"proxy\" was \"' + typeof proxy + '\".')\n        );\n        console.log(\n            chalk.red('Either remove \"proxy\" from package.json, or make it a string.')\n        );\n        process.exit(1);\n    }\n\n    // If proxy is specified, let it handle any request except for\n    // files in the public folder and requests to the WebpackDevServer socket endpoint.\n    // https://github.com/facebook/create-react-app/issues/6720\n    const sockPath = process.env.WDS_SOCKET_PATH || '/ws';\n    const isDefaultSockHost = !process.env.WDS_SOCKET_HOST;\n    function mayProxy(pathname) {\n        const maybePublicPath = path.resolve(\n            appPublicFolder,\n            pathname.replace(new RegExp('^' + servedPathname), '')\n        );\n        const isPublicFileRequest = fs.existsSync(maybePublicPath);\n        // used by webpackHotDevClient\n        const isWdsEndpointRequest =\n            isDefaultSockHost && pathname.startsWith(sockPath);\n        return !(isPublicFileRequest || isWdsEndpointRequest);\n    }\n\n    if (!/^http(s)?:\\/\\//.test(proxy)) {\n        console.log(\n            chalk.red(\n                'When \"proxy\" is specified in package.json it must start with either http:// or https://'\n            )\n        );\n        process.exit(1);\n    }\n\n    let target;\n    if (process.platform === 'win32') {\n        target = resolveLoopback(proxy);\n    } else {\n        target = proxy;\n    }\n    return [\n        {\n            target,\n            logLevel: 'silent',\n            // For single page apps, we generally want to fallback to /index.html.\n            // However we also want to respect `proxy` for API calls.\n            // So if `proxy` is specified as a string, we need to decide which fallback to use.\n            // We use a heuristic: We want to proxy all the requests that are not meant\n            // for static assets and as all the requests for static assets will be using\n            // `GET` method, we can proxy all non-`GET` requests.\n            // For `GET` requests, if request `accept`s text/html, we pick /index.html.\n            // Modern browsers include text/html into `accept` header when navigating.\n            // However API calls like `fetch()` won’t generally accept text/html.\n            // If this heuristic doesn’t work well for you, use `src/setupProxy.js`.\n            context: function (pathname, req) {\n                return (\n                    req.method !== 'GET' ||\n                    (mayProxy(pathname) &&\n                        req.headers.accept &&\n                        req.headers.accept.indexOf('text/html') === -1)\n                );\n            },\n            onProxyReq: proxyReq => {\n                // Browsers may send Origin headers even with same-origin\n                // requests. To prevent CORS issues, we have to change\n                // the Origin to match the target URL.\n                if (proxyReq.getHeader('origin')) {\n                    proxyReq.setHeader('origin', target);\n                }\n            },\n            onError: onProxyError(target),\n            secure: false,\n            changeOrigin: true,\n            ws: true,\n            xfwd: true,\n        },\n    ];\n}\n\nexport function choosePort(host, defaultPort) {\n    return detect(defaultPort, host).then(\n        port =>\n            new Promise(resolve => {\n                if (port === defaultPort) {\n                    return resolve(port);\n                }\n                const message =\n                    process.platform !== 'win32' && defaultPort < 1024 && !isRoot()\n                        ? `Admin permissions are required to run a server on a port below 1024.`\n                        : `Something is already running on port ${defaultPort}.`;\n                if (isInteractive) {\n                    clearConsole();\n                    const existingProcess = getProcessForPort(defaultPort);\n                    const question = {\n                        type: 'confirm',\n                        name: 'shouldChangePort',\n                        message:\n                            chalk.yellow(\n                                message +\n                                `${existingProcess ? ` Probably:\\n  ${existingProcess}` : ''}`\n                            ) + '\\n\\nWould you like to run the app on another port instead?',\n                        initial: true,\n                    };\n                    prompts(question).then(answer => {\n                        if (answer.shouldChangePort) {\n                            resolve(port);\n                        } else {\n                            resolve(null);\n                        }\n                    });\n                } else {\n                    console.log(chalk.red(message));\n                    resolve(null);\n                }\n            }),\n        err => {\n            throw new Error(\n                chalk.red(`Could not find an open port at ${chalk.bold(host)}.`) +\n                '\\n' +\n                ('Network error message: ' + err.message || err) +\n                '\\n'\n            );\n        }\n    );\n}"]}