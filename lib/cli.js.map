{"version":3,"file":"cli.js","sourceRoot":"","sources":["../src/cli.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport * as cp from 'child_process';\nimport * as semver from 'semver';\nimport { Container } from 'inversify';\nimport { DependencyRegister } from './dependency-register';\nimport { NB } from './nb';\n\nexport class CLI {\n    public static container = new Container();\n    public static nb: NB;\n    public static package: any;\n\t\n\tprivate static _nimbleVersion: string;\n\tpublic static get nimbleVersion(): string {\n\t\tif (!this._nimbleVersion) {\n\t\t\tconst prefix = 'npm show @nimble-ts/core';\n\t\t\tconst stable = cp.execSync(`${prefix} version`).toString('utf8').replace(/(\\r\\n|\\n|\\r)/gm, '');\n\t\t\tconst beta = cp.execSync(`${prefix} dist-tags.beta`).toString('utf8').replace(/(\\r\\n|\\n|\\r)/gm, '');\n\t\t\tconst alpha = cp.execSync(`${prefix} dist-tags.alpha`).toString('utf8').replace(/(\\r\\n|\\n|\\r)/gm, '');\n\n\t\t\tconst equalOrGreater = (v1, v2) => {\n\t\t\t\tv1 = v1.split('-')[0];\n\t\t\t\tv2 = v2.split('-')[0];\n\t\t\t\treturn v1 === v2 || semver.gt(v1, v2);\n\t\t\t}\n\n\t\t\tif (alpha && equalOrGreater(alpha, stable) && (!beta || equalOrGreater(alpha, beta))) {\n\t\t\t\tthis._nimbleVersion = alpha;\n\t\t\t}\n\t\t\telse if (beta && equalOrGreater(beta, stable) && (!alpha || equalOrGreater(beta, alpha))) {\n\t\t\t\tthis._nimbleVersion = beta;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._nimbleVersion = stable;\n\t\t\t}\n\t\t}\n\t\treturn this._nimbleVersion;\n\t}\n\n    public static get version() { return this.package ? this.package.version : '1.0.0'; }\n    public static get globalVersion(): string {\n\t\tif (this.workingInLocalProject()) {\n\t\t\ttry {\n\t\t\t\tif (process.mainModule) {\n\t\t\t\t\tlet globalPath = path.join(process.mainModule['path'], '../package.json');\n\t\t\t\t\tif (fs.existsSync(globalPath)) {\n\t\t\t\t\t\tlet packgeJson = JSON.parse(fs.readFileSync(globalPath, 'utf8'));\n\t\t\t\t\t\treturn packgeJson ? packgeJson.version : this.version;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch { return this.version; }\n\t\t}\n\t\treturn this.version;\n\t}\n\n    public static get worksPath() { return process.cwd(); }\n    \n    public static start() {\n        this.getInformation();\n        DependencyRegister.register(this.container);\n\n        this.nb = this.container.get<NB>('NB');\n        this.nb.setArgurments(process.argv.slice(2));\n        this.nb.start();\n    }\n\n    public static inject<T>(type: string) {\n        return this.container.get<T>(type);\n    }\n\n    public static hasGlobalInstalled(): boolean {\n\t\tif (this.workingInLocalProject()) {\n\t\t\ttry {\n\t\t\t\tlet packgeJson = require(\"../package.json\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcatch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n    public static workingInLocalProject() {\n\t\tlet projectRootPath = path.join(__dirname, '../../../../');\n\t\treturn fs.existsSync(`${projectRootPath}/nimble.json`);\n\t}\n\n    public static worksPathIsRootProject(path?: string) {\n        if (!path) path = this.worksPath;\n        if(!path.endsWith('/')) path += '/';\n\n        if (!fs.pathExistsSync(`${path}src`) || !fs.existsSync(`${path}package.json`)) {\n            return false\n        }\n        if (!fs.existsSync(`${path}nimble.json`)) {\n            return false;\n        }\n\n        let packageFile = null;\n        try { packageFile = require(`${path}package.json`); } catch {}\n        if (!packageFile || !packageFile['dependencies'] || !packageFile['dependencies']['@nimble-ts/core'])\n            return false;\n\n        return true;\n    }\n\n    public static worksPathIsSourceDir() {\n        let dirName = this.worksPath.split(path.sep).pop();\n        return dirName === 'src';\n    }\n\n    public static isNimbleProject() {\n        let parent = this.worksPath;\n        \n        let rootPath = path.parse(parent).root;\n\n        while(parent && parent !== rootPath) {\n            if (this.worksPathIsRootProject(parent))\n                return true;\n            parent = this.getParentPath(parent);\n        }\n        return false;\n    }\n\n    public static getNimbleProjectRootPath() {\n        let parent = this.worksPath;\n        let rootPath = path.parse(parent).root;\n\n        while(parent && parent !== rootPath) {\n            if (this.worksPathIsRootProject(parent))\n                return parent;\n            parent = this.getParentPath(parent);\n        }\n        return parent;\n    }\n\n    public static getParentPath(completePath: string) {\n        let parentPath = path.join(completePath + '/..');\n        return parentPath;\n    }\n\n    private static getInformation() {\n        try {\n            this.package = require('package.json');\n        }\n        catch {\n            this.package = require('../package.json');\n        }\n    }\n    \n}\n\nCLI.start();"]}