{"version":3,"file":"new.js","sourceRoot":"","sources":["../../../src/options/new/new.ts"],"names":[],"mappings":"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","sourcesContent":["const spawn = require('cross-spawn');\nimport inquirer from 'inquirer';\nimport * as cp from 'child_process';\nimport { inject, injectable } from 'inversify';\nimport { QuestionAnswer } from '../../core/question-answer.model';\nimport { Logger } from '../../utils/logger.util';\nimport { FileCreator } from '../../core/file-creator/file-creator';\n\nimport { INDEX_HTML, MANIFEST_JSON } from './templates/public-directory';\nimport { NIMBLE_JSON, GITIGNORE, PACKAGE_JSON, README, TSCONFIG } from './templates/project-directory';\nimport { CLI } from '../../cli';\nimport { STYLE_SCSS, MAIN_TS } from './templates/src-directory';\nimport { RESET_SCSS, VARIABLES_SCSS } from './templates/scss-directory';\nimport { DEV_ENV, LOCAL_ENV, PROD_ENV } from './templates/environments-directory';\nimport { ROUTES_TS } from './templates/app-directory';\nimport { ROOT_HTML, ROOT_SCSS, ROOT_TS } from './templates/pages/root-page-directory';\nimport { FIRST_HTML, FIRST_SCSS, FIRST_TS } from './templates/pages/first-page-directory';\nimport { SECOND_HTML, SECOND_SCSS, SECOND_TS } from './templates/pages/second-page-directory';\nimport { THIRD_HTML, THIRD_SCSS, THIRD_TS } from './templates/pages/third-page-directory';\nimport { Readable } from 'stream';\n\n@injectable()\nexport class New {\n    private projectName!: string;\n\n    private get projectFriendlyName() {\n        let name = this.projectName;\n\n        if (name.includes('-'))\n            name = name.split('-').map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join('');\n\n        if (name.includes('_'))\n            name = name.split('_').map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join('');\n\n        name = name[0].toUpperCase() + name.substr(1);\n        \n        return name;\n    }\n\n    constructor(\n        @inject('Logger')  private logger: Logger\n    ) {\n        if (CLI.isNimbleProject()) {\n            this.logger.showWarn('⚠️ Looks like you\\'re already on a Nimble project.');\n            process.exit(0);\n        }\n\n        this.execute();\n    }\n\n    private async execute() {\n        let answer: QuestionAnswer = await this.question();\n\n        let projectName = answer.value.trim().toLowerCase();\n\n        if (this.isValid(projectName)) {\n            this.projectName = projectName;\n            this.startCreateProject();\n        }\n        else\n            this.execute();\n    }\n\n    private question(): Promise<QuestionAnswer> {\n        return inquirer.prompt([{ \n            name: 'value',\n            type: 'input',\n            message: 'What is name of the your project? (ex.: my-project)',\n        }]);\n    };\n\n    private isValid(projectName: string): boolean {\n        if(projectName === '') {\n            this.logger.showError('The name cannot be empty.');\n            return false;\n        }\n        if(projectName.includes(' ')) {\n            this.logger.showError('The name cannot constains whitespace.');\n            return false;\n        }\n        if(/[!$%^&*()+|~=`{}\\[\\]:\";'<>?,.\\/]/.test(projectName)) {\n            this.logger.showError('The name cannot have the following symbols: !$%^&*()+|~=`{}\\[\\]:\";\\'<>?,.\\/');\n            return false;\n        }\n\n        return true;\n    }\n\n    private async startCreateProject() {\n        let creator = new FileCreator();\n        creator.initialize([\n            {\n                name: this.projectName,\n                children: [\n                    {\n                        name: 'public',\n                        children: [\n\t\t\t\t\t\t\t{ name: 'index.html', content: this.replaceVariablesInContentFile(INDEX_HTML) },\n                            { name: 'manifest.json', content: this.replaceVariablesInContentFile(MANIFEST_JSON) },\n                            { name: 'favicon.ico', from: __dirname + '/templates/files/favicon.ico' },\n                            {\n                                name: 'assets',\n                                children: [\n\t\t\t\t\t\t\t\t\t{ name: 'css' },\n\t\t\t\t\t\t\t\t\t{ name: 'fonts' },\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'img',\n\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t{ name: 'logo_white.png', from: __dirname + '/templates/files/logo_white.png'  },\n\t\t\t\t\t\t\t\t\t\t\t{ name: 'icon_100x100.png', from: __dirname + '/templates/files/icon_100x100.png'  },\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ name: 'js' }\n\t\t\t\t\t\t\t\t]\n                            },\n                        ]\n                    },\n                    {\n                        name: 'src',\n                        children: [\n                            {\n                                name: 'app',\n                                children: [\n                                    { name: 'routes.ts', content: this.replaceVariablesInContentFile(ROUTES_TS) },\n                                    {\n                                        name: 'pages',\n                                        children: [\n                                            {\n                                                name: 'root',\n                                                children: [\n                                                    { name: 'root.page.html', content: this.replaceVariablesInContentFile(ROOT_HTML) },\n                                                    { name: 'root.page.scss', content: this.replaceVariablesInContentFile(ROOT_SCSS) },\n                                                    { name: 'root.page.ts', content: this.replaceVariablesInContentFile(ROOT_TS) },\n                                                ]\n                                            },\n                                            {\n                                                name: 'first',\n                                                children: [\n                                                    { name: 'first.page.html', content: this.replaceVariablesInContentFile(FIRST_HTML) },\n                                                    { name: 'first.page.scss', content: this.replaceVariablesInContentFile(FIRST_SCSS) },\n                                                    { name: 'first.page.ts', content: this.replaceVariablesInContentFile(FIRST_TS) },\n                                                ]\n                                            },\n                                            {\n                                                name: 'second',\n                                                children: [\n                                                    { name: 'second.page.html', content: this.replaceVariablesInContentFile(SECOND_HTML) },\n                                                    { name: 'second.page.scss', content: this.replaceVariablesInContentFile(SECOND_SCSS) },\n                                                    { name: 'second.page.ts', content: this.replaceVariablesInContentFile(SECOND_TS) },\n                                                ]\n                                            },\n                                            {\n                                                name: 'third',\n                                                children: [\n                                                    { name: 'third.page.html', content: this.replaceVariablesInContentFile(THIRD_HTML) },\n                                                    { name: 'third.page.scss', content: this.replaceVariablesInContentFile(THIRD_SCSS) },\n                                                    { name: 'third.page.ts', content: this.replaceVariablesInContentFile(THIRD_TS) },\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            },\n                            {\n                                name: 'scss',\n                                children: [\n                                    { name: 'reset.scss', content: this.replaceVariablesInContentFile(RESET_SCSS) },\n                                    { name: 'variables.scss', content: this.replaceVariablesInContentFile(VARIABLES_SCSS) },\n                                ]\n                            },\n                            {\n                                name: 'environments',\n                                children: [\n                                    { name: 'env.local.js', content: this.replaceVariablesInContentFile(LOCAL_ENV) },\n                                    { name: 'env.dev.js', content: this.replaceVariablesInContentFile(DEV_ENV) },\n                                    { name: 'env.prod.js', content: this.replaceVariablesInContentFile(PROD_ENV) },\n                                ]\n                            },\n                            { name: 'style.scss', content: this.replaceVariablesInContentFile(STYLE_SCSS) },\n                            { name: 'main.ts', content: this.replaceVariablesInContentFile(MAIN_TS) },\n                        ]\n                    },\n                    { name: '.gitignore', content: this.replaceVariablesInContentFile(GITIGNORE) },\n                    { name: 'nimble.json', content: this.replaceVariablesInContentFile(NIMBLE_JSON) },\n                    {\n\t\t\t\t\t\tname: 'package.json',\n\t\t\t\t\t\tcontent: this.replaceVariablesInContentFile(PACKAGE_JSON, (name, value) => {\n\t\t\t\t\t\t\tif (name === 'NimbleVersion' && (!value.includes('alpha') && !value.includes('beta'))) {\n\t\t\t\t\t\t\t\treturn `^${value}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n                    { name: 'README.md', content: this.replaceVariablesInContentFile(README) },\n                    { name: 'tsconfig.json', content: this.replaceVariablesInContentFile(TSCONFIG) }\n                ]\n            }\n        ]);\n        await creator.startCreateFiles((response) => {\n            if (!response.error) {\n                this.logger.showCreated(response.fileInstruction.completePath());\n            }\n            else {\n                this.logger.showError(response.error);\n            }\n        });\n\n        this.logger.breakLine();\n        this.logger.showInfo('Installing dependencies...');\n        console.log('(This may take a few minutes)');\n\n        let errorsMsg: string[] = [];\n        let childProcess = cp.exec(`npm install --no-optional --colors`, { cwd: this.projectName });\n\n        (childProcess.stdout as Readable).on('data', (data) => {\n            console.log(data);\n        });\n        (childProcess.stderr as Readable).on('data', (data) => {\n            console.log(data);\n            if (data) errorsMsg.push(data.toString());\n        });\n\n        childProcess.addListener('close', (code) => {\n            if (!code)\n                this.logger.showSuccess('Finished! Your project has been created!');\n            else if (errorsMsg.some(x => x.includes('permission')))\n                this.logger.showSuccess('Finished! Your project has been created, but we had some permissions problems, see above. Maybe you need run \"npm run initialize\" inside project folder with administrator privileges.');\n            else\n                this.logger.showSuccess('Finished! Your project has been created, but we had some problems, see above.');\n        });\n    }\n\n    private replaceVariablesInContentFile(content: string, proccess?: (name: string, value: string) => string) {\n        let regex = /\\[\\[(.|\\n)*?\\]\\]/g;\n        if (regex.test(content)) {\n            content = content.replace(regex, (name) => {\n\t\t\t\tname = name.replace(/(^\\[\\[)|(\\]\\]$)/g, '');\n\t\t\t\tconst value = name !== '' ? this.getValueByName(name) : '';\n\n                return (proccess) ? proccess(name, value) : value;\n            });\n        }\n\n        return content;\n    }\n\n    private getValueByName(name: string){\n        switch(name) {\n            case 'ProjectName':\n                return this.projectName;\n            case 'ProjectFriendlyName':\n                return this.projectFriendlyName;\n            case 'Version':\n                return CLI.version;\n            case 'NimbleVersion':\n                return CLI.nimbleVersion;\n        }\n        return '';\n    }\n}"]}