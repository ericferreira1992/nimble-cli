{"version":3,"file":"project-directory.js","sourceRoot":"","sources":["../../../../src/options/new/templates/project-directory.ts"],"names":[],"mappings":";;;AAAa,QAAA,WAAW,GACxB,oQAeE,CAAC;AAEU,QAAA,MAAM,GACnB,giBAWC,CAAC;AAEW,QAAA,YAAY,GACzB,ogCA+BC,CAAC;AAEW,QAAA,QAAQ,GACrB,mzBA8BE,CAAC;AAEU,QAAA,SAAS,GACtB,2/BAmEC,CAAC","sourcesContent":["export const NIMBLE_JSON = \n`{\n    \"pre-render\": {\n        \"enabled\": true,\n        \"routes\": [\n\t\t\t\"/\",\n\t\t\t\"second\",\n\t\t\t\"third\"\n        ]\n    },\n    \"vendors\": {\n        \"js\": [],\n        \"css\": [\n            \"src/style.scss\"\n        ]\n    }\n}`;\n\nexport const README = \n`# Nimble Project\nThis project was generated with Nimble CLI version [[Version]].\n\n## Development server\nRun \\`nb serve\\` for a dev server. Navigate to \\`http://localhost:8090/\\`. The app will automatically reload if you change any of the source files.\n\n## Code scaffolding\nRun \\`nb\\`, after select \\`Generate\\` option.\n\n## Build\nRun \\`nb build\\` to build the project. The build artifacts will be stored in the \\`build/\\` directory. Use the \\`--env\\` flag for a specific environment build, for example \\`--env=prod\\`, the \\`--env=local\\` is default.\n`;\n\nexport const PACKAGE_JSON =\n`{\n    \"name\": \"[[ProjectName]]\",\n    \"version\": \"1.0.0\",\n    \"scripts\": {\n        \"start\": \"nb serve\",\n        \"build\": \"nb build\",\n        \"serve\": \"nb serve --env=local\",\n        \"serve:dev\": \"nb serve --env=dev\",\n        \"serve:prod\": \"nb serve --env=prod\",\n        \"build:dev\": \"nb build --env=dev\",\n        \"build:prod\": \"nb build --env=prod\"\n    },\n    \"private\": true,\n    \"dependencies\": {\n        \"@nimble-ts/core\": \"[[NimbleVersion]]\"\n    },\n    \"devDependencies\": {\n        \"@nimble-ts/cli\": \"^[[Version]]\",\n        \"@types/node\": \"^12.12.7\",\n        \"@types/webpack-env\": \"^1.14.1\",\n        \"css-loader\": \"^2.1.1\",\n        \"file-loader\": \"^3.0.1\",\n        \"html-loader\": \"^0.5.5\",\n        \"node-sass\": \"^4.14.1\",\n        \"postcss-loader\": \"^3.0.0\",\n        \"sass-loader\": \"^7.1.0\",\n        \"style-loader\": \"^0.23.1\",\n        \"ts-loader\": \"^5.4.5\",\n        \"typescript\": \"^3.9.3\"\n    }\n}\n`;\n\nexport const TSCONFIG =\n`{\n    \"compileOnSave\": false,\n    \"compilerOptions\": {\n        \"allowJs\": true,\n        \"module\": \"esnext\",\n        \"target\": \"es2015\",\n        \"sourceMap\": true,\n        \"baseUrl\": \"./\",\n        \"outDir\": \"./dist/\",\n        \"downlevelIteration\": true,\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true,\n        \"declaration\": false,\n        \"esModuleInterop\": true,\n        \"allowSyntheticDefaultImports\": true,\n        \"moduleResolution\": \"node\",\n        \"typeRoots\": [\n            \"node_modules/@types\"\n        ],\n        \"lib\": [\n            \"es2017\",\n            \"dom\"\n        ],\n        \"paths\": {\n            \"src/*\": [\"./src/*\"]\n        }\n    },\n    \"include\": [\n        \"./src/**/*\"\n    ]\n}`;\n\nexport const GITIGNORE =\n`dist\nbuild\n\n.DS_Store\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\n/node_modules/\njspm_packages\n\n# TypeScript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# next.js build output\n.next\n`;\n"]}