{"version":3,"file":"logger.util.js","sourceRoot":"","sources":["../../src/utils/logger.util.ts"],"names":[],"mappings":"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","sourcesContent":["import { red, green, cyan, yellow, bold } from 'kleur';\nimport * as figlet from 'figlet';\nimport * as semver from 'semver';\n\nimport { injectable } from 'inversify';\nimport { ConsoleMessage } from './console-message';\nimport { CLI } from '../cli';\n\n@injectable()\nexport class Logger {\n\tprivate newLine = '\\n';\n\n\tpublic breakLine() {\n\t\tconsole.log('');\n\t}\n\n\tpublic showVersion(): void {\n\t\tlet inLocalProject = CLI.workingInLocalProject();\n\t\tconsole.log(cyan(figlet.textSync(ConsoleMessage.TITLE, { horizontalLayout: 'full' })));\n\n\t\tif (inLocalProject && CLI.hasGlobalInstalled()) {\n\t\t\tlet version = CLI.version;\n\t\t\tlet globalVersion = CLI.globalVersion;\n\t\t\tif (semver.gt(globalVersion, version)) {\n\t\t\t\tconsole.info(yellow(`⚠️ Your global Nimble CLI version (${globalVersion}) is greater than your local version (${version}). The local Nimble CLI version is used.`));\n\t\t\t\tconsole.info('');\n\t\t\t}\n\t\t}\n\n\t\tconsole.info('Versions:');\n\t\tconsole.info(` • ${bold('Nimble CLI')}\\t -> ` + cyan(CLI.version) + yellow(` (Using ${inLocalProject ? 'local version of this project' : 'global'})`));\n\t\tconsole.info(` • ${bold('Node')}\\t\\t -> ` + cyan(process.versions.node));\n\t\tconsole.info(` • ${bold('OS')}\\t\\t -> ` + cyan(`${process.platform} ${process.arch}`));\n\t\tconsole.info('');\n\t}\n\n\tpublic showWarn(message: string | Error): void {\n\t\tconsole.warn(yellow(ConsoleMessage.WARN) + message);\n\t}\n\n\tpublic showError(message: string | Error): void {\n\t\tconsole.error(red(ConsoleMessage.ERROR) + message);\n\t}\n\n\tpublic showSuccess(message: string): void {\n\t\tconsole.log(green(ConsoleMessage.SUCCESS) + message + this.newLine);\n\t}\n\n\tpublic showInfo(message: string): void {\n\t\tconsole.info(cyan(ConsoleMessage.INFO) + message + this.newLine);\n\t}\n\n\tpublic showCreated(fileName: string): void {\n\t\tconsole.log(green(ConsoleMessage.CREATED) + `${fileName}`);\n\t}\n\n\tpublic showUpdate(fileName: string, filePath: string): void {\n\t\tfilePath\n\t\t\t? console.log(green(ConsoleMessage.UPDATED) + `${fileName} in ${filePath}`)\n\t\t\t: console.log(green(ConsoleMessage.UPDATED) + `${fileName}`);\n\t}\n}"]}