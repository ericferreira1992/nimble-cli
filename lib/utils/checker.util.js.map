{"version":3,"file":"checker.util.js","sourceRoot":"","sources":["../../src/utils/checker.util.ts"],"names":[],"mappings":";;;;AAAA,kDAAoB;AAEpB,uCAA+C;AAI/C;IAEI,iBAAuC,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAElD,2BAAS,GAAhB,UAAiB,IAAsB;QACnC,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kDAAkD,CAAC,CAAC;YAC1E,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;IACL,CAAC;IAAA,CAAC;IAEK,gCAAc,GAArB,UAAsB,IAAY;QAC9B,OAAO,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IAC/C,CAAC;IAAA,CAAC;IAEK,4CAA0B,GAAjC,UAAkC,IAAY;QAC1C,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,EAAE;YACN,YAAE,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;SAC3D;IACL,CAAC;IApBQ,OAAO;QADnB,IAAA,sBAAU,GAAE;QAGI,mBAAA,IAAA,kBAAM,EAAC,QAAQ,CAAC,CAAA;OAFpB,OAAO,CAqBnB;IAAD,cAAC;CAAA,AArBD,IAqBC","sourcesContent":["import fs from 'fs';\n\nimport { injectable, inject } from 'inversify';\nimport { Logger } from './logger.util';\n\n@injectable()\nexport class Checker {\n\n    constructor(@inject('Logger')  private logger: Logger) {}\n\n    public checkName(name: string | boolean): void {\n        if (name === true) {\n            this.logger.showError('Invalid command: No name found after the command');\n            process.exit(1);\n        }\n    };\n\n    public checkExistence(path: string): boolean {\n        return fs.existsSync(process.cwd() + path);\n    };\n\n    public checkIfDirExistElseMakeDir(path: string): void {\n        let dir = this.checkExistence(path);\n        if (!dir) {\n            fs.mkdirSync(process.cwd() + path, { recursive: true });\n        }\n    }\n}"]}